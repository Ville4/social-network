{"version":3,"file":"static/js/981.2b7c3520.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Users/users.module.css?9211","redux/users-selectors.ts","components/Users/usersSearchForm.tsx","components/Users/users.tsx","components/Users/usersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"users_wrapper__rTIa8\",\"title\":\"users_title__h-p0o\",\"container\":\"users_container__qiTqM\",\"body\":\"users_body__f-0t7\",\"imgWrapper\":\"users_imgWrapper__RSmAI\",\"img\":\"users_img__lchal\",\"buttonWrapper\":\"users_buttonWrapper__RWZ2x\",\"button\":\"users_button__n0Bwj\",\"info\":\"users_info__gDIes\",\"nameWrapper\":\"users_nameWrapper__e2gHz\",\"locationWrapper\":\"users_locationWrapper__BO6h1\",\"selected\":\"users_selected__An48Q\",\"pagination\":\"users_pagination__uAet1\",\"formItem\":\"users_formItem__L9Tku\",\"formButton\":\"users_formButton__ENgFB\",\"imgContainer\":\"users_imgContainer__JgN2i\",\"form\":\"users_form__QKeLu\"};","\r\nimport { appStateType } from './redux-store'\r\n\r\nexport const usersSelector = (state: appStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const usersPageLimitSelector = (state: appStateType) => {\r\n    return state.usersPage.usersPageLimit\r\n}\r\n\r\nexport const totalUsersCountSelector = (state: appStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const currentPageSelector = (state: appStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const isFetchingSelector = (state: appStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const followingInProgressSelector = (state: appStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const filterSelector = (state: appStateType) => {\r\n    return state.usersPage.filter\r\n}\r\n","import { Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { filterSelector } from \"../../redux/users-selectors\";\r\nimport { filterType } from \"../../redux/usersPage-reducer\";\r\nimport m  from \"./users.module.css\"\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\ntype UsersSearchFormPropsType = {\r\n  onFilterChanged: (filter: filterType) => void\r\n  setCurrentPortion: (number: number) => void\r\n}\r\n\r\ntype formType = {\r\n  term: string\r\n  friend: boolean | null\r\n}\r\n\r\nconst UsersSearchForm: React.FC<UsersSearchFormPropsType> = (props) => {\r\n\r\n    const filter = useSelector(filterSelector)\r\n\r\n    const submit = (values: formType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n         const filter: filterType = {\r\n           term: values.term,\r\n           //friend: values.friend === 'true' ? true :  values.friend === 'false ' ? false : null\r\n           friend: values.friend\r\n          }\r\n          \r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n        props.setCurrentPortion(1)\r\n      }\r\n\r\n    return (\r\n        <Formik\r\n        enableReinitialize={true}\r\n        initialValues={{term: String(filter.term), friend:filter.friend}}\r\n        validate={usersSearchFormValidate}\r\n        onSubmit={submit}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form className={m.form}>\r\n            <Field className={m.formItem} type=\"text\" name=\"term\" />\r\n            <Field className={m.formItem} as=\"select\" name=\"friend\">\r\n             <option value=\"null\">All</option>\r\n             <option value='true'>Only friends</option>\r\n             <option value=\"false\">Other users</option>\r\n           </Field>\r\n            <button className={m.formButton} type=\"submit\" disabled={isSubmitting}>\r\n              Find\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    )\r\n}\r\n\r\nconst UsersSearchFormMemo = React.memo(UsersSearchForm)\r\n\r\nexport default UsersSearchFormMemo","import m  from \"./users.module.css\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport userPhoto from '../../assets/images/user.jpg'\r\nimport Preloader from \"../common/preloader/preloader\"\r\nimport { NavLink, useSearchParams } from \"react-router-dom\"\r\nimport UsersSearchForm from \"./usersSearchForm\"\r\nimport { filterType, followThunk, getUsersThunk, setUsersThunk, unFollowThunk } from \"../../redux/usersPage-reducer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { currentPageSelector, filterSelector, followingInProgressSelector, isFetchingSelector, totalUsersCountSelector,\r\n     usersPageLimitSelector, \r\n     usersSelector} from \"../../redux/users-selectors\"\r\nimport { AnyAction } from \"redux\"\r\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\"\r\n\r\n\r\ntype propsType = {\r\n\r\n}\r\n\r\nexport const Users: React.FC<propsType> = (props) => {\r\n\r\n    const totalUsersCount = useSelector(totalUsersCountSelector)\r\n    const currentPage = useSelector(currentPageSelector)\r\n    const usersPageLimit = useSelector(usersPageLimitSelector)\r\n    const filter = useSelector(filterSelector)\r\n    const users = useSelector(usersSelector)\r\n    const followingInProgress = useSelector(followingInProgressSelector)\r\n    const isFetching = useSelector(isFetchingSelector)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    useEffect(()=> {\r\n\r\n        let currentFriendStatus: any = searchParams.get('friend')\r\n        console.log(currentFriendStatus)\r\n        if(currentFriendStatus === 'true') {\r\n            currentFriendStatus = true\r\n            console.log(currentFriendStatus)\r\n        } if (currentFriendStatus === 'null') {\r\n            currentFriendStatus = null\r\n            console.log(currentFriendStatus)\r\n        } else {\r\n            currentFriendStatus = false\r\n            console.log(currentFriendStatus)\r\n        }\r\n        const currentTermStatus = searchParams.get('term')\r\n        const currentPageStatus = searchParams.get('page')\r\n\r\n        let actualPage = currentPage\r\n        if(currentPageStatus) actualPage = Number(currentPageStatus)\r\n\r\n        let actualFilter = filter\r\n        if(currentTermStatus) actualFilter = {...actualFilter, term: currentTermStatus}\r\n        if(currentFriendStatus) actualFilter = {...actualFilter, friend: currentFriendStatus}\r\n\r\n        \r\n        dispatch(getUsersThunk(actualPage, usersPageLimit, actualFilter) as unknown as AnyAction)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const term = filter.term\r\n        const friend = filter.friend\r\n\r\n        let urlQuery =\r\n            (term === '' ? '' : `&term=${term}`)\r\n            + (friend === null ? '' : `&friend=${friend}`)\r\n            + (currentPage === 1 ? '' : `&page=${currentPage}`)\r\n\r\n        setSearchParams(urlQuery)\r\n    }, [filter, currentPage])\r\n\r\n  \r\n    const dispatch = useDispatch()\r\n    const onChangedPage = (p: number) => {\r\n        dispatch(setUsersThunk(p, usersPageLimit, filter) as unknown as AnyAction)\r\n    }\r\n    const onFilterChanged = (filter: filterType) => {\r\n        dispatch(setUsersThunk(1, usersPageLimit, filter) as unknown as AnyAction)\r\n    }\r\n    const follow = (id: number) => {\r\n        dispatch(followThunk(id) as unknown as AnyAction)\r\n    }\r\n    const unFollow = (id: number) => {\r\n        dispatch(unFollowThunk(id) as unknown as AnyAction)\r\n    }\r\n \r\n    let pagesCount = Math.ceil(totalUsersCount / usersPageLimit)\r\n    let portionSize = 5\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [currentPortion, setCurrentPortion] = useState(1)\r\n    let leftBorderPortion = (currentPortion - 1) * portionSize + 1\r\n    let rightBorderPortion = currentPortion * portionSize\r\n    let pages: any = []\r\n\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (<div className={m.wrapper}>\r\n        {isFetching ? <Preloader/> : null}\r\n        <UsersSearchForm setCurrentPortion={setCurrentPortion} onFilterChanged={onFilterChanged}/>\r\n        <div className={m.container}> \r\n            <div className={m.pagination}>\r\n                {currentPortion > 1 && <button onClick={()=>{setCurrentPortion(currentPortion - 1)}}><LeftOutlined/></button> }\r\n                {pages.filter((p:number) => p >= leftBorderPortion && p <= rightBorderPortion)\r\n                    .map((p:number) => {\r\n                    return <span key={p}\r\n                    className={p === currentPage ? m.selected : null}\r\n                    onClick={(e) => { onChangedPage(p) }}>{p}</span>\r\n                })}\r\n                {portionCount > currentPortion && <button onClick={()=>{setCurrentPortion(currentPortion + 1)}}><RightOutlined/></button>}\r\n            </div>\r\n            \r\n            {\r\n\r\n                users.map(user => <div key={user.id} className={m.body} >\r\n                    <div className={m.imgWrapper}>\r\n                        <div className={m.imgContainer}>\r\n                            <div className={m.img}>\r\n                                <NavLink to={'/profile/' + user.id}>\r\n                                    <img src={user.photos.small != null ? user.photos.small : userPhoto} alt='avatar' />\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className={m.buttonWrapper}>\r\n                            {user.followed \r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)} onClick={() => {unFollow(user.id)}}\r\n                                className={m.button}>Unfollow</button> \r\n                            :<button disabled={followingInProgress\r\n                                .some(id => id === user.id)} onClick={() => {follow(user.id)}}\r\n                                className={m.button}>Follow</button>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={m.info}>\r\n                        <div className={m.nameWrapper}>\r\n                            <h2 className={m.name}>{user.name}</h2>\r\n                            <div className={m.status}>{user.status}</div>\r\n                        </div>\r\n                        <div className={m.locationWrapper}>\r\n                            <div>{'...info'}</div>\r\n                            <div>{'...info'}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import {Users} from \"./users\";\r\nimport React from \"react\";\r\nimport m  from \"./users.module.css\"\r\n\r\ntype usersPagePropsType = {\r\n\r\n}\r\nconst UsersPage: React.FC<usersPagePropsType> = (props) => {\r\n    return (\r\n        <div className={m.wrapper}>\r\n            <h2 className={m.title}>Users</h2>\r\n            <Users />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UsersPage\r\n"],"names":["usersSelector","state","usersPage","users","usersPageLimitSelector","usersPageLimit","totalUsersCountSelector","totalUsersCount","currentPageSelector","currentPage","isFetchingSelector","isFetching","followingInProgressSelector","followingInProgress","filterSelector","filter","usersSearchFormValidate","values","UsersSearchForm","props","useSelector","enableReinitialize","initialValues","term","String","friend","validate","onSubmit","setSubmitting","onFilterChanged","setCurrentPortion","isSubmitting","className","m","type","name","as","value","disabled","React","Users","useSearchParams","searchParams","setSearchParams","useEffect","currentFriendStatus","get","console","log","currentTermStatus","currentPageStatus","actualPage","Number","actualFilter","dispatch","getUsersThunk","urlQuery","useDispatch","pagesCount","Math","ceil","portionCount","useState","currentPortion","leftBorderPortion","rightBorderPortion","pages","i","push","setUsersThunk","onClick","LeftOutlined","p","map","e","onChangedPage","RightOutlined","user","to","id","src","photos","small","userPhoto","alt","followed","some","unFollowThunk","followThunk","status"],"sourceRoot":""}